@charset "utf-8";

// ---------------------------------------------------------------------------- //
// ---------- VENDOR ---------------------------------------------------------- //
// ---------------------------------------------------------------------------- //
// 3rd party "resources"

@import url("//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css");
@import url("//fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800&subset=latin,latin-ext"); // Open Sans
@import "../components/angular-loading-bar/build/loading-bar.css";

// ---------------------------------------------------------------------------- //
// ---------- APP DEPENDENCIES ------------------------------------------------ //
// ---------------------------------------------------------------------------- //

@import "katalyst/_reset"; // general reset

// SCSS Framework + DEBUG styles (Compass)
@import "compass/css3";

// Bootstrap
@import "lib/bootstrap/assets/stylesheets/_bootstrap-compass";
@import "lib/bootstrap/assets/stylesheets/_bootstrap";

// Other components/modules
@import "modules/_animate"; // Animate.css
@import "modules/_git-ribbon"; // Git ribbon

// Debug-belt (TODO: disable for production?)
@import "katalyst/_debug";

// Color Schemas + Theme config
@import "katalyst/_colors";
@import "katalyst/_config";

// Utility MIXIN-belt
@import "katalyst/_mixins";

// Global styles
@import "katalyst/_global";

// Custom FX / animations
@import "katalyst/_fx";

// ---------------------------------------------------------------------------- //
// ---------- "WORKHOLIO" APP STYLES ------------------------------------------ //
// ---------------------------------------------------------------------------- //

body {
  position: relative;

  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  line-height: 1;
  color: #fff;

  background: #1b1b21;

  //@include background-image(linear-gradient(#8b9da9, #fff6e4));
  //@include background-image(linear-gradient(180deg, rgba(27, 25, 31, 0.9) 20%, rgba(19, 17, 94, 0.9) 100%));

  overflow-x: hidden; // disable horizontal scrollbars on item hover (we upscale it)
}

// "Hacks"
.nav, .pagination, .carousel, .panel-title a { cursor: pointer; } // ui.bootstrap fix for a href clicks


// TYPOGRAPHY / LINKS
h1, h2, h3, h4, h5, h6 { font-family: 'Open Sans', sans-serif; color: inherit; }

a {
  color: #fff;
  text-decoration: none;
  outline: none;

  @include transition(all 0.2s ease-out);

  &:hover { text-decoration: underline; }
}

pre {
  color: #fff;
}

.main-container { }

// App logo
.app-logo {
  display: block;

  width: 100%;
  max-width: 260px;

  margin: 50px auto;
  text-align: center; // center inline-blocks

  // responsiveness bro
  @include small() { margin: 70px auto; }

  // icon
  .icon {
    display: inline-block;
    width: 180px; // mobile first

    svg {
      width: 100%; // TODO: check if this works properly
      height: 100%; // safari is dumb
    }

    // responsive sizes
    @include hand-only() { width: 200px; }
    @include small() { width: 260px; }

    // Animation ready: smooth trans
    @include transition(all 0.2s $animationEasing);

    // Butterfly animations
    .st4, .st8 { @include animate(fadeInLights, 1.16s, 3s, $animationEasing); }
    .st6, .st7 { @include animate(fadeInShadows, 1.16s, 3s, $animationEasing); }

  }

  // tag line
  .tagline {
    display: block;

    @include font-size(16, 1);
    font-weight: 300;
    color: #fff;

    margin-top: 40px;

    // Animation ready / Force HA
    @extend %noflicker;
    @include transition(all 0.3s $animationEasing);

    @include animation-delay(3.16s);

    // hi there directive sexy beast!
    span {
      display: inline-block;
    }
  }

  // custom anims
  .flipper {
    @include transform-origin(center center);

    // Animation ready / Force HA
    @extend %noflicker;
    @include transition(all 0.4s $animationEasing);

    //@include animate(flipper, 0.32s, 0.2s, $animationEasing);

    @include animation-duration(0.16s);
    @include animation-timing-function($animationEasing);
    @include animation-iteration-count(2);
    @include animation-direction(alternate);
    @include animation-delay(3.16s);
    @include animation-name(flipper);
  }
}

.headline {
  display: block;
  opacity: 0;

  margin: 0px auto;
  text-align: center;

  @include font-size(50, 1); // mobile first
  font-weight: 700;

  // responsive sizes
  @include small() { @include font-size(80, 1); }

  // Animation ready / Force HA
  @extend %noflicker;
  @include transition(all 0.4s $animationEasing);

  @include animation-delay(4s);
}

.overlay-modal {
  z-index: 999;
  @extend %positionCenter;

  position: fixed;
  width: 100%;
  height: 100%;

  @include background-image(linear-gradient(120deg, rgba(27, 25, 31, 0.9) 10%, rgba(35, 27, 134, 0.9) 100%));
  
  .overlay-wrapper {
    //@extend %translateCenter;
  }
}

// Project detail modal
// TODO: finish this. v2 maybe ?
.project-detail {
  height: 90%;

  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;

  padding: 0px;
  margin: 0px auto;

  background: #fff;
  color: #000;

  .pic-frame {
    width: 100%;
    height: 100%;
    max-height: 300px;

    @include background-size(cover);
    background-position: center center;
  }
}

.headbar {
  width: 100%;
  margin: 0px auto;

  border-bottom: 1px solid rgba(100, 100, 100, 0.3);

  .nav {

    @include font-size(13, 1);
    //text-transform: uppercase;

    li {
      padding: 20px;
    }

    .contact { float: right; }

  }

}

.spreadTheLove {
  text-align: center;
  padding: 10px 0px 20px;

  @include font-size(13, 1);
  font-weight: 300;

  color: #636363;

  .loveicon {
    color: #e74c3c;
  }

  // Animation ready / Force HA
  @extend %noflicker;
  @include transition(all 0.4s $animationEasing);

  @include animation-delay(4s);
}

//
// Menu Selector
//
.menu {

  margin: 60px auto 80px;

  @include transition(all 0.4s $animationEasing);

  // Responsiveness
  @include hand() { opacity: 0; margin: 0px; }

  // buttons
  .buttons {
    margin: 0px auto;
    padding: 10px 0px;

    text-align: center; // center items in list

    // item
    .item {
      display: inline-block;

      padding: 0px 20px;

      @include font-size(15);
      font-weight: 300;

      text-decoration: none;

      // links
      a {
        color: #fff;

        &:hover {
          color: #fff;
          text-decoration: none;
        }
      }

      // decorative underline
      i {
        display: block;

        width: 0%;
        height: 1px;
        margin-top: 5px;

        background: #5dd6ff; //#23232f;

        @include transition(all 0.2s $animationEasing);
      }

      // hover state
      &:hover {
        color: #fff;
        cursor: pointer;
        text-decoration: none;

        i {
          background: #7b75cb;
          width: 100%;
        }
      }

      // selected state
      &.selected,
      &.active {
        &:hover { cursor: default; }

        i {
          background: #7b75cb;
          width: 100%;
        }
      }

    }
  }
} // @end: menu

//
// Portofolio Grid
//
.portofolio {

  opacity: 0;

  // Animation ready / Force HA
  @extend %noflicker;
  @include transition(all 0.4s $animationEasing);

  @include animation-delay(4.5s);

  @extend .container-fluid !optional;
  //overflow-x: hidden; // disable horizontal scrollbars on item hover (we upscale it)

  padding-bottom: 70px;

  // image grid
  .grid {

    @include make-row();
    text-align: center; // center inline-blocks

    // grid item
    .grid-item {
      z-index: 1;
      position: relative;

      display: inline-block;
      vertical-align: top;

      // background
      background: #1b1b1b;

      // spacing
      margin-bottom: 1px;

      // default sizes
      max-width: 320px;
      max-height: 500px;

      //height: 500px;
      height: 160px;

      // mobile first bitch!
      @include make-xs-column(6); // 2 per row

      // RESPONSIVE SIZES
      // TODO: maybe move this to a whole RESPONSIVE section?

      //@include hand() { height: 160px; }
      @include hand-only() { @include make-xs-column(4); }
      @include small() { @include make-xs-column(4); height: 340px; }  // 768px and up / 3 per row
      @include medium() { @include make-xs-column(3); } // 992px and up / 4 per row
      @include wide() { height:500px; } // 1200px and up - higher grid tiles
      @include huge() { @include make-xs-column(2); }   // 1600px and up / 6 per row

      float: none !important; // remove floats

      // Animation ready / Force HA
      @extend %noflicker;
      @include transition(all 0.4s $animationEasing);

      // tag line
      .tag {
        z-index: 3;

        display: inline-block;
        @extend %translateCenter;

        // Animation ready / Force HA
        @extend %noflicker;
        //@include transition(all 0.2s $animationEasing);

        // title holder
        .title {
          opacity: 0;

          padding: 10px;

          color: #000;
          @include font-size(14, 1);
          text-shadow: 0 1px 1px rgba(255,255,255, 0.7);

          background: #F1C40F;
          @include box-shadow(0 10px 16px -4px rgba(36, 45, 50, 0.25));

          // responsiveness
          @include small() { padding: 10px 20px; }

          // Animation ready
          @extend %noflicker;
          @include transition(all 0.2s $animationEasing);
          @include transform(translateY(200%));
        }

      }

      // project type
      .type {
        opacity: 0;

        z-index: 3;
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;

        padding: 10px;

        @include font-size(11, 1);
        text-transform: uppercase;

        @include transition(all 0.5s $animationEasing);
      }

      // image thumb
      .thumb {
        z-index: 2;

        opacity: 0;
        width: 100%;
        height: 100%;

        @extend %positionCenter;
        @include background-size(cover);
        background-position: center center;

        cursor: pointer;
        //border: 2px transparent;

        // Animation ready / Force HA
        @extend %noflicker;
        //@include transition(all 0.3s $animationEasing);

        // Gradient mask overlay
        &:after {
          content: ''; // force shadow element to show

          opacity: 0;
          @extend .positionCenter;

          background: #292484;

          // old gradient
          @include background-image(linear-gradient(120deg, #1b191f 0%, #231b86 100%));

          // new gradient
          //@include background-image(linear-gradient(120deg, rgba(27, 25, 31, 1) 0%, rgba(35, 27, 134, 1) 100%));

          // Animation ready / Force HA
          @extend %noflicker;
          @include transition(all 0.3s $animationEasing);
        }

        // img holder
        img {
          //@extend .translateCenter;
          display: none; // do not display the image, we use background-image on parent
        }

      }

      // experimenal border
      .svg-border {
        opacity: 0; // hide at start

        z-index: 3;

        @extend .positionCenter;
        width: 100%;
        height: 100%;

        // svg
        svg {

          .shape {
            fill: transparent;

            stroke: #5dd6ff; // #16A4E6 #74d3f1;
            stroke-width: 5px;

            stroke-dashoffset: 1700;
            stroke-dasharray: 1700;

            // responsive sizes (reduce stroke dash/offset)
            // TODO: maybe move this to a whole RESPONSIVE section?
            @include hand() {
              stroke-dashoffset: 1400;
              stroke-dasharray: 1400;
            }

            /*
            @include hand-only() {
              stroke-dashoffset: 1600;
              stroke-dasharray: 1600;
            }

            @include small() {
              stroke-dashoffset: 1700;
              stroke-dasharray: 1700;
            }  // 768px and up
            */

            // Animation ready / Force HA
            @extend %noflicker;
            @include transition(all 0.6s $animationEasing);
            //transition: stroke-width 1s, stroke-dashoffset 1s, stroke-dasharray 1s;
            //-moz-transition: stroke-width 1s, stroke-dashoffset 1s, stroke-dasharray 1s;
          }

        }
      }

      // zoom
      .zoomer {
        z-index: 2;

        width: 100%;
        height: 100%;

        @extend .positionCenter;

        // Animation ready / Force HA
        @extend %noflicker; // TODO: might cause issues, double check this!
        @include transition(all 0.3s $animationEasing);
      }

      // loaded item
      &.loaded {
        .icon-loader { opacity: 0; }
      }


      // grid item HOVER
      &.loaded:hover {
        z-index: 999; // render on top of everything
        cursor: pointer;

        // fade in up
        .tag {

          .title {
            opacity: 1;
            @include transform(translateY(0));
          }

        }

        .type { opacity: 0.8; }

        // zoom in thumb
        .zoomer {
          @include box-shadow(0 0px 20px rgba(0,0,0, 0.5));
          @include transform(scale3d(1.1, 1.1, 1.1) translate3d(0, 0, 0));
        }

        // fade in gradient mask
        .thumb {
          // old
          //border: 2px solid #8880fa;
          //@include transform(scale3d(1.1, 1.1, 1.1) translate3d(0, 0, 0));
          cursor: pointer;

          &:after {
            opacity: 0.8;
          }
        }

        // fade in border
        .svg-border {
          opacity: 1;

          // stroke animation
          .shape {
            stroke: #8880fa;
            stroke-width: 3;

            // Animate it
            stroke-dashoffset: 0;
            //@include animate(svg_dash, 0.7s, 0.1s, $animationEasing);
          }
        }

      }

    } // @end: grid-item

  } // @end: grid
} // @end: portofolio


//
// Grid item animations
//
.animateGridItem {

  &.ng-enter, &.ng-leave {
    @extend %noflicker;
    @include transition(all 0.3s $animationEasing);
    @include animation-duration(0.3s);
    @include animation-timing-function($animationEasing);
  }

  &.ng-enter {
    @include animation-iteration-count(1);
    @include animation-name(fadeInUp);
    //opacity: 1;
  }

  &.ng-leave {
    @include animation-iteration-count(1);
    @include animation-name(fadeOutDown);
    //opacity: 0;
  }

  /*
  &.ng-enter-stagger,
  &.ng-leave-stagger,
  &.ng-move-stagger {
    @include animation-delay(0.3s);
    @include animation-duration(0);

    -webkit-transition-delay: 0.2s;
    transition-delay: 0.2s;

    -webkit-transition-duration: 0;
    transition-duration: 0;

    .grid-item {
      -webkit-transition-delay: 0.2s;
      transition-delay: 0.2s;

      -webkit-transition-duration: 0;
      transition-duration: 0;
    }
  }*/

}

//
//  fx.loadIcon
//

load-icon {

  // svg version
  .svg-loader {
    z-index: 1;
    background: transparent;

    svg {
      @extend %positionCenter;

      path {
        &.circle {
          fill: #000;
        }
        &.light {
          fill: #16A4E6;
        }
      }
    }
  }

  // css version
  .icon-loader {
    z-index: 1;

    width: 100%;
    min-height: 100%;

    margin: 0 auto;

    text-align: center;
    vertical-align: middle;

    // circle loader
    .circle {
      $ringBorder: 2px;
      $ringSize: 30px;

      $ringColor: #16A4E6;
      $ringBg: #000;

      @extend .positionCenter;

      width: $ringSize;
      height: $ringSize;

      border-radius: 50%;
      border: $ringBorder solid $ringBg;

      // Animation ready / Force HA
      @extend %noflicker;
      @include animate(spin, 0.5s, 0s, linear, infinite);

      &:before {
        content: '';
        display: block;

        width: $ringSize;
        height: $ringSize;

        border-radius: 50%;

        position: absolute;
        top: -$ringBorder;
        left: -$ringBorder;

        border: $ringBorder solid $ringBg;
        border-left: $ringBorder solid $ringColor;
      }

    }
    //.circle loader

    // lines loader
    .slides {
      $slideSize: 1px;
      $slideColor: #16A4E6;
      //$slideColor: #7b75cb;

      @extend .positionCenter;
      // position: relative;
      // margin: 0px auto;

      width: 25%;
      height: $slideSize;

      // Animation ready
      @extend %noflicker;
      @include transition(all 0.3s $animationEasing);

      // slide
      .slide {
        position: absolute;

        width: 25%;
        height: $slideSize;

        background: $slideColor;

        // Animation ready / Force HA
        @extend %noflicker;
        @include animate(slide, 1.16s, 0s, $animationEasing, infinite);

        &:nth-of-type(0n+1) {
          opacity: 0.2;
          @include transform(scale(1.8, 1));
          @include animation-delay(0.2s);
        }

        &:nth-of-type(0n+2) {
          opacity: 0.4;
          @include transform(scale(1.4, 1));
          @include animation-delay(0.1s);
        }

        &:nth-of-type(0n+3) {
          opacity: 0.8;
        }

      }

    }

  }
}

//
//  fx.LoadingBar
//
$fx-loadingbar-color: #19b5fe;

#loading-bar {
  .bar { background: $fx-loadingbar-color; }

  .peg {
    -moz-box-shadow: $fx-loadingbar-color 1px 0 6px 1px;
    -ms-box-shadow: $fx-loadingbar-color 1px 0 6px 1px;
    -webkit-box-shadow: $fx-loadingbar-color 1px 0 6px 1px;
    box-shadow: $fx-loadingbar-color 1px 0 6px 1px;
  }
}

#loading-bar-spinner .spinner-icon {
  border-top-color:  $fx-loadingbar-color;
  border-left-color: $fx-loadingbar-color;
}

.main-container { z-index: 2; }

//
//  fx.Projector
//
fx-projector {
  @extend %positionCenter;
  position: fixed;
  z-index: -1;

  width: 100%;
  height: 100%;
  opacity: 0;

  text-align: center;
  @include background-image(linear-gradient(120deg, rgba(27, 25, 31, 0.9) 10%, rgba(35, 27, 134, 0.9) 100%));

  overflow-y: scroll;

  // Animation ready / Force HA
  @extend %noflicker;
  @include transition(all 0.4s $animationEasing);

  // preview container
  .fx-preview {
    position: relative;

    display: inline-block;
    height: 100%;
//    width: 100%;

    max-width: 90%;

    // responsiveness
    @include wide() { max-width: 80%; }

    margin: 0px auto;
    padding: 50px 0px 80px;

    img {
      margin: 50px auto;
      opacity: 0;

      // Animation ready / Force HA
      @extend %noflicker;
      @include transition(all 0.4s $animationEasing);
    }

    h1 {
      opacity: 0;

      @include font-size(30,1);
      font-weight: 300;

      margin-bottom: 15px;

      // responsive sizes
      @include medium() { @include font-size(40,1); }
      @include wide() { @include font-size(50,1); }
    }

    .extra {
      opacity: 0;

      // Animation ready / Force HA
      @extend %noflicker;
      @include transition(all 1s $animationEasing);

      h4 { font-weight: 300; }
    }

    // close button
    .btn-close {
      width: 40px;
      height: 40px;

      position: static;
      top: 40px;
      right: 40px;

      // responsiveness
      @include wide() { position: fixed; }

      background: none;
      color: #fff;

      border: 1px dashed #4f4f4f;
      border-radius: 0;

      // Animation ready / Force HA
      @extend %noflicker;
      @include transition(all 0.2s $animationEasing);

      @include transform(rotate(45deg));

      .icon {
        // Animation ready / Force HA
        @extend %noflicker;
        @include transition(all 0.2s $animationEasing);


        @include transform(rotate(-45deg));
      }

      // hover state
      &:hover {
        background: #f00;
        color: #000;
        border-color: #222;
      }
    }

  }

  // projector: active
  &.active {
    z-index: 999;
    opacity: 1;

    // projector preview image loaded
    .fx-preview.loaded {

      .icon-loader { opacity: 0; display: none; }

      h1 {
        @include animation-duration(0.6s);
        @include animation-timing-function($animationEasing);
        @include animation-iteration-count(1);
        @include animation-fill-mode(forwards);
        @include animation-name(fadeInDown);
      }

      .extra {
        @include animation-delay(0.4s);
        @include animation-duration(1s);
        @include animation-timing-function($animationEasing);
        @include animation-iteration-count(1);
        @include animation-fill-mode(forwards);
        @include animation-name(fadeIn);
      }
      
      img {
        @include animation-duration(1s);
        @include animation-timing-function($animationEasing);
        @include animation-iteration-count(1);
        @include animation-fill-mode(forwards);
        @include animation-name(fadeInUp);
      }

    }
  }
}

//
//  fx.Stringz
//
fx-stringz {
  @extend %positionCenter;

  display: none;

  opacity: 0;
  z-index: -1;
  position: fixed;

  background: none;

  // Animation ready / Force HA
  @extend %noflicker;
  @include transition(all 0.4s $animationEasing);


  // canvas
  canvas {
    width: 100%;
    height: 100%;

    background: none;

    // Animation ready / Force HA
    @extend %noflicker;
    @include transition(all 0.4s $animationEasing);
  }

  // pretty canvas bro!
  &.animated {
    @include animation-timing-function($animationEasing);
    @include animation-delay(0.32s);
    @include animation-duration(1.6s); // fade in duration

    display: block;

    // i'm pretty !
    canvas {
      //@include animation("pulse 5s 2s infinite alternate");

      @include animation-duration(5s);
      @include animation-timing-function($animationEasing);
      @include animation-iteration-count(infinite);
      @include animation-name(pulse);
    }
  }

}

//
// GitHub link ribbon
//
git-link {
  width: 130px;
  height: 130px;

  overflow: hidden;

  position: absolute;
  top: 0;
  right: 0;

  // actual ribbon
  .ribbon {
    display: none;
    opacity: 0;

    a {
      font-family: 'Open Sans', sans-serif;
      @include font-size(12, 1);
      font-weight: 400;
      line-height: 20px;
    }

    @include animation-delay(5s);
    @include animation-duration(1s);
    @include animation-timing-function($animationEasing);
    @include animation-iteration-count(1);
    @include animation-fill-mode(forwards);
    @include animation-name(fadeIn);

    // show git ribbon on large screens only
    @include wide() {
      display: inline-block;
      @include animation-name(fadeIn);
    }

  }
}

//
// Experimental
//

.tilter3D {
  // Animation ready
  @extend %noflicker; // force 3d render
  @include transition(transform $animationEasing);
}